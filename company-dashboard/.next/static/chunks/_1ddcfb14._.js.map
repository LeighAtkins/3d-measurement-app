{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///root/3d-measurement-app/company-dashboard/src/app/login/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { Button, Card, CardHeader, CardTitle, CardContent, useAuth } from '@3d-measurement-app/ui';\nimport { authAPI } from '@3d-measurement-app/api-client';\n\nexport default function LoginPage() {\n  const [email, setEmail] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const router = useRouter();\n  const searchParams = useSearchParams();\n  const { login } = useAuth();\n  \n  // Check for verification token in URL\n  const token = searchParams.get('token');\n  const emailParam = searchParams.get('email');\n\n  const handleVerification = async (verificationToken: string, verificationEmail: string) => {\n    setLoading(true);\n    try {\n      const response = await authAPI.verify(verificationToken, verificationEmail);\n      // Redirect to company selection or dashboard\n      router.push('/company');\n    } catch (err: any) {\n      setError(err.error || 'Verification failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleTokenFromUrl = async (jwtToken: string, userEmail: string) => {\n    setLoading(true);\n    try {\n      // Set the token first so we can make authenticated requests\n      authAPI.client.setToken(jwtToken);\n      \n      // Fetch complete user data from the API\n      const userData = await authAPI.getMe();\n      \n      // Use the login function from AuthProvider to set user context\n      await login(jwtToken, userData);\n      \n      // Redirect will be handled by the company page based on user context\n      router.push('/company');\n    } catch (err) {\n      setError('Failed to process authentication');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (token && emailParam) {\n      // Check if this is a JWT token (starts with ey) or a magic link token\n      if (token.startsWith('ey')) {\n        // This is a JWT token from the redirect\n        handleTokenFromUrl(token, emailParam);\n      } else {\n        // This is a magic link token\n        handleVerification(token, emailParam);\n      }\n    }\n  }, [token, emailParam]);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setMessage('');\n\n    try {\n      const response = await authAPI.signin(email);\n      setMessage(`Magic link sent to ${email}. Check your email and click the link to sign in.`);\n      \n      // For development, show the verification URL\n      if (response.verifyUrl) {\n        setMessage(\n          `Development mode: Magic link sent. You can also click here to verify: ${response.verifyUrl}`\n        );\n      }\n    } catch (err: any) {\n      setError(err.error || 'Failed to send magic link');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading && token) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <Card className=\"w-full max-w-md\">\n          <CardContent className=\"text-center\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n            <p>Verifying your login...</p>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md\">\n        <CardHeader>\n          <CardTitle className=\"text-center text-2xl font-bold text-gray-900\">\n            Company Dashboard\n          </CardTitle>\n          <p className=\"text-center text-gray-600\">\n            Sign in to manage your 3D measurement orders\n          </p>\n        </CardHeader>\n        \n        <CardContent>\n          {message && (\n            <div className=\"mb-4 p-3 bg-green-50 border border-green-200 rounded-md\">\n              <p className=\"text-green-800 text-sm\">{message}</p>\n            </div>\n          )}\n          \n          {error && (\n            <div className=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-md\">\n              <p className=\"text-red-800 text-sm\">{error}</p>\n            </div>\n          )}\n\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Email Address\n              </label>\n              <input\n                id=\"email\"\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"Enter your email\"\n                disabled={loading}\n              />\n            </div>\n            \n            <Button\n              type=\"submit\"\n              className=\"w-full\"\n              loading={loading}\n              disabled={!email.trim()}\n            >\n              Send Magic Link\n            </Button>\n          </form>\n          \n          <div className=\"mt-6 text-center\">\n            <p className=\"text-xs text-gray-500\">\n              For company admins and users only\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 305, "column": 0}, "map": {"version":3,"sources":["file:///root/3d-measurement-app/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}