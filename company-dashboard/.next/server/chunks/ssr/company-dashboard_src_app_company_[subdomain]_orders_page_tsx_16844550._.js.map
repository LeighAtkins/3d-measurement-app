{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///root/3d-measurement-app/company-dashboard/src/app/company/%5Bsubdomain%5D/orders/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useRouter } from 'next/navigation';\nimport { Card, CardHeader, CardTitle, CardContent, Button, LoadingSpinner } from '@3d-measurement-app/ui';\nimport { ordersAPI, Order } from '@3d-measurement-app/api-client';\n\nexport default function OrdersPage() {\n  const params = useParams();\n  const router = useRouter();\n  const subdomain = params.subdomain as string;\n  \n  const [orders, setOrders] = useState<Order[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  useEffect(() => {\n    loadOrders();\n  }, [subdomain, page]);\n\n  const loadOrders = async () => {\n    try {\n      setError('');\n      const response = await ordersAPI.list(subdomain, { page, limit: 10 });\n      setOrders(response.orders);\n      setTotalPages(response.pagination.pages);\n    } catch (err: any) {\n      setError(err.error || 'Failed to load orders');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getStatusBadge = (status: string) => {\n    const statusStyles = {\n      SUBMITTED: 'bg-blue-100 text-blue-800',\n      PROCESSING: 'bg-yellow-100 text-yellow-800',\n      MODELING_FAILED: 'bg-red-100 text-red-800',\n      READY_FOR_MEASUREMENT: 'bg-purple-100 text-purple-800',\n      MEASUREMENTS_DRAWN: 'bg-indigo-100 text-indigo-800',\n      CLIENT_INPUT_NEEDED: 'bg-orange-100 text-orange-800',\n      COMPLETED: 'bg-green-100 text-green-800',\n      CANCELLED: 'bg-gray-100 text-gray-800',\n    };\n\n    return (\n      <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n        statusStyles[status as keyof typeof statusStyles] || 'bg-gray-100 text-gray-800'\n      }`}>\n        {status.replace(/_/g, ' ')}\n      </span>\n    );\n  };\n\n  const getPriorityBadge = (priority: string) => {\n    const priorityStyles = {\n      LOW: 'text-gray-600',\n      NORMAL: 'text-blue-600',\n      HIGH: 'text-orange-600',\n      URGENT: 'text-red-600',\n    };\n\n    return (\n      <span className={`text-sm font-medium ${\n        priorityStyles[priority as keyof typeof priorityStyles] || 'text-gray-600'\n      }`}>\n        {priority}\n      </span>\n    );\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center py-12\">\n        <LoadingSpinner size=\"lg\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"text-2xl font-bold text-gray-900\">Orders</h2>\n        <Button onClick={() => window.location.reload()}>\n          Refresh\n        </Button>\n      </div>\n\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n          <p className=\"text-red-800\">{error}</p>\n        </div>\n      )}\n\n      {orders.length === 0 ? (\n        <Card>\n          <CardContent>\n            <div className=\"text-center py-12\">\n              <p className=\"text-gray-500\">No orders found</p>\n            </div>\n          </CardContent>\n        </Card>\n      ) : (\n        <div className=\"grid gap-6\">\n          {orders.map((order) => (\n            <Card key={order.id} className=\"hover:shadow-md transition-shadow\">\n              <CardContent>\n                <div className=\"flex justify-between items-start\">\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center space-x-3\">\n                      <h3 className=\"text-lg font-semibold text-gray-900\">\n                        {order.orderNumber}\n                      </h3>\n                      {getStatusBadge(order.status)}\n                      {getPriorityBadge(order.priority)}\n                    </div>\n                    \n                    <p className=\"text-gray-600\">\n                      Client: {order.client?.name || order.client?.email}\n                    </p>\n                    \n                    {order.notes && (\n                      <p className=\"text-sm text-gray-500\">\n                        {order.notes}\n                      </p>\n                    )}\n                    \n                    <div className=\"flex items-center space-x-4 text-sm text-gray-500\">\n                      <span>\n                        Created: {new Date(order.createdAt).toLocaleDateString()}\n                      </span>\n                      {order.dueDate && (\n                        <span>\n                          Due: {new Date(order.dueDate).toLocaleDateString()}\n                        </span>\n                      )}\n                      {order.measurements && (\n                        <span>\n                          {order.measurements.length} measurements\n                        </span>\n                      )}\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex space-x-2\">\n                    <Button\n                      variant=\"secondary\"\n                      size=\"sm\"\n                      onClick={() => {\n                        router.push(`/company/${subdomain}/orders/${order.id}`);\n                      }}\n                    >\n                      View Details\n                    </Button>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      )}\n\n      {/* Pagination */}\n      {totalPages > 1 && (\n        <div className=\"flex justify-center space-x-2\">\n          <Button\n            variant=\"secondary\"\n            disabled={page === 1}\n            onClick={() => setPage(page - 1)}\n          >\n            Previous\n          </Button>\n          <span className=\"flex items-center px-4 text-sm text-gray-700\">\n            Page {page} of {totalPages}\n          </span>\n          <Button\n            variant=\"secondary\"\n            disabled={page === totalPages}\n            onClick={() => setPage(page + 1)}\n          >\n            Next\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AALA;;;;;;AAOe,SAAS;IACtB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,YAAY,OAAO,SAAS;IAElC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAChD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG;QAAC;QAAW;KAAK;IAEpB,MAAM,aAAa;QACjB,IAAI;YACF,SAAS;YACT,MAAM,WAAW,MAAM,0IAAA,CAAA,YAAS,CAAC,IAAI,CAAC,WAAW;gBAAE;gBAAM,OAAO;YAAG;YACnE,UAAU,SAAS,MAAM;YACzB,cAAc,SAAS,UAAU,CAAC,KAAK;QACzC,EAAE,OAAO,KAAU;YACjB,SAAS,IAAI,KAAK,IAAI;QACxB,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,iBAAiB,CAAC;QACtB,MAAM,eAAe;YACnB,WAAW;YACX,YAAY;YACZ,iBAAiB;YACjB,uBAAuB;YACvB,oBAAoB;YACpB,qBAAqB;YACrB,WAAW;YACX,WAAW;QACb;QAEA,qBACE,8OAAC;YAAK,WAAW,CAAC,yDAAyD,EACzE,YAAY,CAAC,OAAoC,IAAI,6BACrD;sBACC,OAAO,OAAO,CAAC,MAAM;;;;;;IAG5B;IAEA,MAAM,mBAAmB,CAAC;QACxB,MAAM,iBAAiB;YACrB,KAAK;YACL,QAAQ;YACR,MAAM;YACN,QAAQ;QACV;QAEA,qBACE,8OAAC;YAAK,WAAW,CAAC,oBAAoB,EACpC,cAAc,CAAC,SAAwC,IAAI,iBAC3D;sBACC;;;;;;IAGP;IAEA,IAAI,SAAS;QACX,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC,sJAAA,CAAA,iBAAc;gBAAC,MAAK;;;;;;;;;;;IAG3B;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAmC;;;;;;kCACjD,8OAAC,8IAAA,CAAA,SAAM;wBAAC,SAAS,IAAM,OAAO,QAAQ,CAAC,MAAM;kCAAI;;;;;;;;;;;;YAKlD,uBACC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAE,WAAU;8BAAgB;;;;;;;;;;;YAIhC,OAAO,MAAM,KAAK,kBACjB,8OAAC,4IAAA,CAAA,OAAI;0BACH,cAAA,8OAAC,4IAAA,CAAA,cAAW;8BACV,cAAA,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAE,WAAU;sCAAgB;;;;;;;;;;;;;;;;;;;;qCAKnC,8OAAC;gBAAI,WAAU;0BACZ,OAAO,GAAG,CAAC,CAAC,sBACX,8OAAC,4IAAA,CAAA,OAAI;wBAAgB,WAAU;kCAC7B,cAAA,8OAAC,4IAAA,CAAA,cAAW;sCACV,cAAA,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAG,WAAU;kEACX,MAAM,WAAW;;;;;;oDAEnB,eAAe,MAAM,MAAM;oDAC3B,iBAAiB,MAAM,QAAQ;;;;;;;0DAGlC,8OAAC;gDAAE,WAAU;;oDAAgB;oDAClB,MAAM,MAAM,EAAE,QAAQ,MAAM,MAAM,EAAE;;;;;;;4CAG9C,MAAM,KAAK,kBACV,8OAAC;gDAAE,WAAU;0DACV,MAAM,KAAK;;;;;;0DAIhB,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;;4DAAK;4DACM,IAAI,KAAK,MAAM,SAAS,EAAE,kBAAkB;;;;;;;oDAEvD,MAAM,OAAO,kBACZ,8OAAC;;4DAAK;4DACE,IAAI,KAAK,MAAM,OAAO,EAAE,kBAAkB;;;;;;;oDAGnD,MAAM,YAAY,kBACjB,8OAAC;;4DACE,MAAM,YAAY,CAAC,MAAM;4DAAC;;;;;;;;;;;;;;;;;;;kDAMnC,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC,8IAAA,CAAA,SAAM;4CACL,SAAQ;4CACR,MAAK;4CACL,SAAS;gDACP,OAAO,IAAI,CAAC,CAAC,SAAS,EAAE,UAAU,QAAQ,EAAE,MAAM,EAAE,EAAE;4CACxD;sDACD;;;;;;;;;;;;;;;;;;;;;;uBA9CE,MAAM,EAAE;;;;;;;;;;YA0DxB,aAAa,mBACZ,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,8IAAA,CAAA,SAAM;wBACL,SAAQ;wBACR,UAAU,SAAS;wBACnB,SAAS,IAAM,QAAQ,OAAO;kCAC/B;;;;;;kCAGD,8OAAC;wBAAK,WAAU;;4BAA+C;4BACvD;4BAAK;4BAAK;;;;;;;kCAElB,8OAAC,8IAAA,CAAA,SAAM;wBACL,SAAQ;wBACR,UAAU,SAAS;wBACnB,SAAS,IAAM,QAAQ,OAAO;kCAC/B;;;;;;;;;;;;;;;;;;AAOX","debugId":null}}]
}