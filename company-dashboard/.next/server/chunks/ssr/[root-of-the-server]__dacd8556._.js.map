{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_e531dabc.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_e531dabc-module__QGiZLq__className\",\n  \"variable\": \"geist_e531dabc-module__QGiZLq__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_e531dabc.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist%22,%22arguments%22:[{%22variable%22:%22--font-geist-sans%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist', 'Geist Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_68a01160.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_mono_68a01160-module__YLcDdW__className\",\n  \"variable\": \"geist_mono_68a01160-module__YLcDdW__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_68a01160.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist_Mono%22,%22arguments%22:[{%22variable%22:%22--font-geist-mono%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistMono%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist Mono', 'Geist Mono Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,0JAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,0JAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,0JAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":["file:///root/3d-measurement-app/packages/ui/src/components/Button.tsx"],"sourcesContent":["import React from 'react';\nimport { clsx } from 'clsx';\n\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: 'primary' | 'secondary' | 'danger' | 'ghost';\n  size?: 'sm' | 'md' | 'lg';\n  loading?: boolean;\n  children: React.ReactNode;\n}\n\nexport const Button: React.FC<ButtonProps> = ({\n  variant = 'primary',\n  size = 'md',\n  loading = false,\n  disabled,\n  className,\n  children,\n  ...props\n}) => {\n  const baseClasses = 'inline-flex items-center justify-center font-medium rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed';\n  \n  const variantClasses = {\n    primary: 'bg-blue-600 text-white hover:bg-blue-700 focus:ring-blue-500',\n    secondary: 'bg-gray-200 text-gray-900 hover:bg-gray-300 focus:ring-gray-500',\n    danger: 'bg-red-600 text-white hover:bg-red-700 focus:ring-red-500',\n    ghost: 'text-gray-700 hover:bg-gray-100 focus:ring-gray-500',\n  };\n  \n  const sizeClasses = {\n    sm: 'px-3 py-2 text-sm',\n    md: 'px-4 py-2 text-sm',\n    lg: 'px-6 py-3 text-base',\n  };\n\n  return (\n    <button\n      className={clsx(\n        baseClasses,\n        variantClasses[variant],\n        sizeClasses[size],\n        className\n      )}\n      disabled={disabled || loading}\n      {...props}\n    >\n      {loading && (\n        <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\">\n          <circle\n            className=\"opacity-25\"\n            cx=\"12\"\n            cy=\"12\"\n            r=\"10\"\n            stroke=\"currentColor\"\n            strokeWidth=\"4\"\n          />\n          <path\n            className=\"opacity-75\"\n            fill=\"currentColor\"\n            d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n          />\n        </svg>\n      )}\n      {children}\n    </button>\n  );\n};"],"names":[],"mappings":";;;;AACA;;;AASO,MAAM,SAAgC,CAAC,EAC5C,UAAU,SAAS,EACnB,OAAO,IAAI,EACX,UAAU,KAAK,EACf,QAAQ,EACR,SAAS,EACT,QAAQ,EACR,GAAG,OACJ;IACC,MAAM,cAAc;IAEpB,MAAM,iBAAiB;QACrB,SAAS;QACT,WAAW;QACX,QAAQ;QACR,OAAO;IACT;IAEA,MAAM,cAAc;QAClB,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;IAEA,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EACZ,aACA,cAAc,CAAC,QAAQ,EACvB,WAAW,CAAC,KAAK,EACjB;QAEF,UAAU,YAAY;QACrB,GAAG,KAAK;;YAER,yBACC,8OAAC;gBAAI,WAAU;gBAAkC,MAAK;gBAAO,SAAQ;;kCACnE,8OAAC;wBACC,WAAU;wBACV,IAAG;wBACH,IAAG;wBACH,GAAE;wBACF,QAAO;wBACP,aAAY;;;;;;kCAEd,8OAAC;wBACC,WAAU;wBACV,MAAK;wBACL,GAAE;;;;;;;;;;;;YAIP;;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///root/3d-measurement-app/packages/ui/src/components/Card.tsx"],"sourcesContent":["import React from 'react';\nimport { clsx } from 'clsx';\n\nexport interface CardProps {\n  children: React.ReactNode;\n  className?: string;\n  padding?: 'sm' | 'md' | 'lg';\n}\n\nexport const Card: React.FC<CardProps> = ({ \n  children, \n  className,\n  padding = 'md'\n}) => {\n  const paddingClasses = {\n    sm: 'p-3',\n    md: 'p-6',\n    lg: 'p-8',\n  };\n\n  return (\n    <div\n      className={clsx(\n        'bg-white rounded-lg border border-gray-200 shadow-sm',\n        paddingClasses[padding],\n        className\n      )}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport const CardHeader: React.FC<{ children: React.ReactNode; className?: string }> = ({\n  children,\n  className,\n}) => (\n  <div className={clsx('mb-4', className)}>\n    {children}\n  </div>\n);\n\nexport const CardTitle: React.FC<{ children: React.ReactNode; className?: string }> = ({\n  children,\n  className,\n}) => (\n  <h3 className={clsx('text-lg font-semibold text-gray-900', className)}>\n    {children}\n  </h3>\n);\n\nexport const CardContent: React.FC<{ children: React.ReactNode; className?: string }> = ({\n  children,\n  className,\n}) => (\n  <div className={clsx(className)}>\n    {children}\n  </div>\n);"],"names":[],"mappings":";;;;;;;AACA;;;AAQO,MAAM,OAA4B,CAAC,EACxC,QAAQ,EACR,SAAS,EACT,UAAU,IAAI,EACf;IACC,MAAM,iBAAiB;QACrB,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;IAEA,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EACZ,wDACA,cAAc,CAAC,QAAQ,EACvB;kBAGD;;;;;;AAGP;AAEO,MAAM,aAA0E,CAAC,EACtF,QAAQ,EACR,SAAS,EACV,iBACC,8OAAC;QAAI,WAAW,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE,QAAQ;kBAC1B;;;;;;AAIE,MAAM,YAAyE,CAAC,EACrF,QAAQ,EACR,SAAS,EACV,iBACC,8OAAC;QAAG,WAAW,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE,uCAAuC;kBACxD;;;;;;AAIE,MAAM,cAA2E,CAAC,EACvF,QAAQ,EACR,SAAS,EACV,iBACC,8OAAC;QAAI,WAAW,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;kBAClB","debugId":null}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":["file:///root/3d-measurement-app/packages/ui/src/components/LoadingSpinner.tsx"],"sourcesContent":["import React from 'react';\nimport { clsx } from 'clsx';\n\nexport interface LoadingSpinnerProps {\n  size?: 'sm' | 'md' | 'lg';\n  className?: string;\n}\n\nexport const LoadingSpinner: React.FC<LoadingSpinnerProps> = ({ \n  size = 'md',\n  className \n}) => {\n  const sizeClasses = {\n    sm: 'h-4 w-4',\n    md: 'h-8 w-8',\n    lg: 'h-12 w-12',\n  };\n\n  return (\n    <div className={clsx('animate-spin rounded-full border-b-2 border-blue-600', sizeClasses[size], className)}>\n    </div>\n  );\n};\n\nexport const LoadingPage: React.FC<{ message?: string }> = ({ \n  message = 'Loading...' \n}) => (\n  <div className=\"flex items-center justify-center min-h-screen\">\n    <div className=\"text-center\">\n      <LoadingSpinner size=\"lg\" className=\"mx-auto mb-4\" />\n      <p className=\"text-gray-600\">{message}</p>\n    </div>\n  </div>\n);"],"names":[],"mappings":";;;;;AACA;;;AAOO,MAAM,iBAAgD,CAAC,EAC5D,OAAO,IAAI,EACX,SAAS,EACV;IACC,MAAM,cAAc;QAClB,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;IAEA,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE,wDAAwD,WAAW,CAAC,KAAK,EAAE;;;;;;AAGpG;AAEO,MAAM,cAA8C,CAAC,EAC1D,UAAU,YAAY,EACvB,iBACC,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAe,MAAK;oBAAK,WAAU;;;;;;8BACpC,8OAAC;oBAAE,WAAU;8BAAiB","debugId":null}},
    {"offset": {"line": 263, "column": 0}, "map": {"version":3,"sources":["file:///root/3d-measurement-app/packages/api-client/src/types.ts"],"sourcesContent":["// User and Authentication types\nexport interface User {\n  id: string;\n  email: string;\n  name: string | null;\n  role: 'CLIENT' | 'COMPANY_USER' | 'COMPANY_ADMIN' | 'ADMIN';\n  companyId: string | null;\n  company?: {\n    id: string;\n    name: string;\n    subdomain: string;\n  };\n}\n\nexport interface AuthResponse {\n  token: string;\n  user: User;\n}\n\nexport interface MagicLinkRequest {\n  email: string;\n}\n\nexport interface MagicLinkResponse {\n  message: string;\n  email: string;\n  devToken?: string;\n  verifyUrl?: string;\n}\n\n// Order types\nexport type OrderStatus = \n  | 'SUBMITTED'\n  | 'PROCESSING'\n  | 'MODELING_FAILED'\n  | 'READY_FOR_MEASUREMENT'\n  | 'MEASUREMENTS_DRAWN'\n  | 'CLIENT_INPUT_NEEDED'\n  | 'COMPLETED'\n  | 'CANCELLED';\n\nexport type Priority = 'LOW' | 'NORMAL' | 'HIGH' | 'URGENT';\n\nexport interface Order {\n  id: string;\n  orderNumber: string;\n  clientId: string;\n  status: OrderStatus;\n  model3dUrl: string | null;\n  priority: Priority;\n  dueDate: string | null;\n  notes: string | null;\n  assignedCompanyId: string | null;\n  createdAt: string;\n  updatedAt: string;\n  client?: {\n    id: string;\n    email: string;\n    name: string | null;\n  };\n  assignedCompany?: {\n    id: string;\n    name: string;\n    subdomain: string;\n  };\n  photos?: Photo[];\n  measurements?: Measurement[];\n}\n\nexport interface OrdersResponse {\n  orders: Order[];\n  pagination: {\n    page: number;\n    limit: number;\n    total: number;\n    pages: number;\n  };\n}\n\n// Measurement types\nexport type MeasurementType = \n  | 'LENGTH'\n  | 'WIDTH' \n  | 'HEIGHT'\n  | 'DIAMETER'\n  | 'CIRCUMFERENCE'\n  | 'ANGLE'\n  | 'CUSTOM';\n\nexport interface Measurement {\n  id: string;\n  orderId: string;\n  type: MeasurementType;\n  label: string;\n  startPointX: number;\n  startPointY: number;\n  startPointZ: number;\n  endPointX: number;\n  endPointY: number;\n  endPointZ: number;\n  value: number | null;\n  unit: string;\n  verified: boolean;\n  notes: string | null;\n  version: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface CreateMeasurementRequest {\n  type: MeasurementType;\n  label: string;\n  startPointX: number;\n  startPointY: number;\n  startPointZ: number;\n  endPointX: number;\n  endPointY: number;\n  endPointZ: number;\n  unit?: string;\n}\n\nexport interface UpdateMeasurementRequest {\n  value?: number;\n  notes?: string;\n}\n\n// Photo types\nexport interface Photo {\n  id: string;\n  orderId: string;\n  url: string;\n  thumbnailUrl: string | null;\n  name: string;\n  size: number;\n  mimeType: string;\n  createdAt: string;\n}\n\n// API Error types\nexport interface ApiError {\n  error: string;\n  message?: string;\n  details?: any;\n  status?: number;\n}\n\n// API Response wrapper\nexport interface ApiResponse<T = any> {\n  data?: T;\n  error?: ApiError;\n}"],"names":[],"mappings":"AAAA,gCAAgC","debugId":null}},
    {"offset": {"line": 376, "column": 0}, "map": {"version":3,"sources":["file:///root/3d-measurement-app/packages/api-client/src/client.ts"],"sourcesContent":["import axios, { AxiosInstance, AxiosRequestConfig, AxiosResponse } from 'axios';\nimport { ApiError, ApiResponse } from './types';\n\nexport class ApiClient {\n  private client: AxiosInstance;\n  private token: string | null = null;\n\n  constructor(baseURL: string = 'http://localhost:8000') {\n    this.client = axios.create({\n      baseURL,\n      timeout: 30000,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    // Request interceptor to add auth token\n    this.client.interceptors.request.use((config) => {\n      if (this.token) {\n        config.headers.Authorization = `Bearer ${this.token}`;\n      }\n      return config;\n    });\n\n    // Response interceptor for error handling\n    this.client.interceptors.response.use(\n      (response) => response,\n      (error) => {\n        if (error.response?.status === 401) {\n          this.handleUnauthorized();\n        }\n        throw this.transformError(error);\n      }\n    );\n  }\n\n  setToken(token: string | null) {\n    this.token = token;\n    if (typeof window !== 'undefined') {\n      if (token) {\n        localStorage.setItem('auth_token', token);\n      } else {\n        localStorage.removeItem('auth_token');\n      }\n    }\n  }\n\n  getToken(): string | null {\n    if (this.token) return this.token;\n    \n    if (typeof window !== 'undefined') {\n      const storedToken = localStorage.getItem('auth_token');\n      if (storedToken && this.isTokenValid(storedToken)) {\n        this.token = storedToken;\n        return storedToken;\n      }\n    }\n    \n    return null;\n  }\n\n  private isTokenValid(token: string): boolean {\n    try {\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      return payload.exp * 1000 > Date.now();\n    } catch {\n      return false;\n    }\n  }\n\n  private handleUnauthorized() {\n    this.setToken(null);\n    if (typeof window !== 'undefined') {\n      window.location.href = '/login';\n    }\n  }\n\n  private transformError(error: any): ApiError {\n    const apiError: ApiError = {\n      error: 'Unknown error',\n      status: error.response?.status || 500,\n    };\n\n    if (error.response?.data) {\n      apiError.error = error.response.data.error || error.response.data.message || error.message;\n      apiError.message = error.response.data.message;\n      apiError.details = error.response.data.details;\n    } else if (error.message) {\n      apiError.error = error.message;\n    }\n\n    return apiError;\n  }\n\n  async get<T>(url: string, config?: AxiosRequestConfig): Promise<T> {\n    const response = await this.client.get<T>(url, config);\n    return response.data;\n  }\n\n  async post<T>(url: string, data?: any, config?: AxiosRequestConfig): Promise<T> {\n    const response = await this.client.post<T>(url, data, config);\n    return response.data;\n  }\n\n  async put<T>(url: string, data?: any, config?: AxiosRequestConfig): Promise<T> {\n    const response = await this.client.put<T>(url, data, config);\n    return response.data;\n  }\n\n  async delete<T>(url: string, config?: AxiosRequestConfig): Promise<T> {\n    const response = await this.client.delete<T>(url, config);\n    return response.data;\n  }\n}\n\n// Create default instance\nexport const apiClient = new ApiClient();"],"names":[],"mappings":";;;;AAAA;;AAGO,MAAM;IACH,OAAsB;IACtB,QAAuB,KAAK;IAEpC,YAAY,UAAkB,uBAAuB,CAAE;QACrD,IAAI,CAAC,MAAM,GAAG,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;YACzB;YACA,SAAS;YACT,SAAS;gBACP,gBAAgB;YAClB;QACF;QAEA,wCAAwC;QACxC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YACpC,IAAI,IAAI,CAAC,KAAK,EAAE;gBACd,OAAO,OAAO,CAAC,aAAa,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE;YACvD;YACA,OAAO;QACT;QAEA,0CAA0C;QAC1C,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CACnC,CAAC,WAAa,UACd,CAAC;YACC,IAAI,MAAM,QAAQ,EAAE,WAAW,KAAK;gBAClC,IAAI,CAAC,kBAAkB;YACzB;YACA,MAAM,IAAI,CAAC,cAAc,CAAC;QAC5B;IAEJ;IAEA,SAAS,KAAoB,EAAE;QAC7B,IAAI,CAAC,KAAK,GAAG;QACb,uCAAmC;;QAMnC;IACF;IAEA,WAA0B;QACxB,IAAI,IAAI,CAAC,KAAK,EAAE,OAAO,IAAI,CAAC,KAAK;QAEjC,uCAAmC;;QAMnC;QAEA,OAAO;IACT;IAEQ,aAAa,KAAa,EAAW;QAC3C,IAAI;YACF,MAAM,UAAU,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,CAAC,IAAI,CAAC,EAAE;YACnD,OAAO,QAAQ,GAAG,GAAG,OAAO,KAAK,GAAG;QACtC,EAAE,OAAM;YACN,OAAO;QACT;IACF;IAEQ,qBAAqB;QAC3B,IAAI,CAAC,QAAQ,CAAC;QACd,uCAAmC;;QAEnC;IACF;IAEQ,eAAe,KAAU,EAAY;QAC3C,MAAM,WAAqB;YACzB,OAAO;YACP,QAAQ,MAAM,QAAQ,EAAE,UAAU;QACpC;QAEA,IAAI,MAAM,QAAQ,EAAE,MAAM;YACxB,SAAS,KAAK,GAAG,MAAM,QAAQ,CAAC,IAAI,CAAC,KAAK,IAAI,MAAM,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI,MAAM,OAAO;YAC1F,SAAS,OAAO,GAAG,MAAM,QAAQ,CAAC,IAAI,CAAC,OAAO;YAC9C,SAAS,OAAO,GAAG,MAAM,QAAQ,CAAC,IAAI,CAAC,OAAO;QAChD,OAAO,IAAI,MAAM,OAAO,EAAE;YACxB,SAAS,KAAK,GAAG,MAAM,OAAO;QAChC;QAEA,OAAO;IACT;IAEA,MAAM,IAAO,GAAW,EAAE,MAA2B,EAAc;QACjE,MAAM,WAAW,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,CAAI,KAAK;QAC/C,OAAO,SAAS,IAAI;IACtB;IAEA,MAAM,KAAQ,GAAW,EAAE,IAAU,EAAE,MAA2B,EAAc;QAC9E,MAAM,WAAW,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAI,KAAK,MAAM;QACtD,OAAO,SAAS,IAAI;IACtB;IAEA,MAAM,IAAO,GAAW,EAAE,IAAU,EAAE,MAA2B,EAAc;QAC7E,MAAM,WAAW,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,CAAI,KAAK,MAAM;QACrD,OAAO,SAAS,IAAI;IACtB;IAEA,MAAM,OAAU,GAAW,EAAE,MAA2B,EAAc;QACpE,MAAM,WAAW,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAI,KAAK;QAClD,OAAO,SAAS,IAAI;IACtB;AACF;AAGO,MAAM,YAAY,IAAI","debugId":null}},
    {"offset": {"line": 473, "column": 0}, "map": {"version":3,"sources":["file:///root/3d-measurement-app/packages/api-client/src/auth.ts"],"sourcesContent":["import { apiClient } from './client';\nimport { AuthResponse, MagicLinkRequest, MagicLinkResponse, User } from './types';\n\nexport class AuthAPI {\n  constructor(private client = apiClient) {}\n\n  async signin(email: string): Promise<MagicLinkResponse> {\n    const request: MagicLinkRequest = { email };\n    return this.client.post<MagicLinkResponse>('/api/auth/signin', request);\n  }\n\n  async verify(token: string, email: string): Promise<AuthResponse> {\n    const url = `/api/auth/verify?token=${encodeURIComponent(token)}&email=${encodeURIComponent(email)}`;\n    const response = await this.client.get<AuthResponse>(url);\n    \n    // Store the JWT token\n    if (response.token) {\n      this.client.setToken(response.token);\n    }\n    \n    return response;\n  }\n\n  logout() {\n    this.client.setToken(null);\n    if (typeof window !== 'undefined') {\n      window.location.href = '/login';\n    }\n  }\n\n  getCurrentUser() {\n    const token = this.client.getToken();\n    if (!token) return null;\n\n    try {\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      return {\n        id: payload.userId,\n        email: payload.email,\n        role: payload.role,\n        companyId: payload.companyId,\n      };\n    } catch {\n      return null;\n    }\n  }\n\n  isAuthenticated(): boolean {\n    return this.client.getToken() !== null;\n  }\n\n  async getMe(): Promise<User> {\n    const response = await this.client.get<{ user: User }>('/api/auth/me');\n    return response.user;\n  }\n}\n\nexport const authAPI = new AuthAPI();"],"names":[],"mappings":";;;;AAAA;;AAGO,MAAM;;IACX,YAAY,AAAQ,SAAS,0IAAA,CAAA,YAAS,CAAE;aAApB,SAAA;IAAqB;IAEzC,MAAM,OAAO,KAAa,EAA8B;QACtD,MAAM,UAA4B;YAAE;QAAM;QAC1C,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAoB,oBAAoB;IACjE;IAEA,MAAM,OAAO,KAAa,EAAE,KAAa,EAAyB;QAChE,MAAM,MAAM,CAAC,uBAAuB,EAAE,mBAAmB,OAAO,OAAO,EAAE,mBAAmB,QAAQ;QACpG,MAAM,WAAW,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,CAAe;QAErD,sBAAsB;QACtB,IAAI,SAAS,KAAK,EAAE;YAClB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,KAAK;QACrC;QAEA,OAAO;IACT;IAEA,SAAS;QACP,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;QACrB,uCAAmC;;QAEnC;IACF;IAEA,iBAAiB;QACf,MAAM,QAAQ,IAAI,CAAC,MAAM,CAAC,QAAQ;QAClC,IAAI,CAAC,OAAO,OAAO;QAEnB,IAAI;YACF,MAAM,UAAU,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,CAAC,IAAI,CAAC,EAAE;YACnD,OAAO;gBACL,IAAI,QAAQ,MAAM;gBAClB,OAAO,QAAQ,KAAK;gBACpB,MAAM,QAAQ,IAAI;gBAClB,WAAW,QAAQ,SAAS;YAC9B;QACF,EAAE,OAAM;YACN,OAAO;QACT;IACF;IAEA,kBAA2B;QACzB,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,OAAO;IACpC;IAEA,MAAM,QAAuB;QAC3B,MAAM,WAAW,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,CAAiB;QACvD,OAAO,SAAS,IAAI;IACtB;AACF;AAEO,MAAM,UAAU,IAAI","debugId":null}},
    {"offset": {"line": 535, "column": 0}, "map": {"version":3,"sources":["file:///root/3d-measurement-app/packages/api-client/src/orders.ts"],"sourcesContent":["import { apiClient } from './client';\nimport { Order, OrdersResponse } from './types';\n\nexport interface OrdersListParams {\n  page?: number;\n  limit?: number;\n  status?: string;\n}\n\nexport class OrdersAPI {\n  constructor(private client = apiClient) {}\n\n  async list(subdomain: string, params: OrdersListParams = {}): Promise<OrdersResponse> {\n    const searchParams = new URLSearchParams();\n    if (params.page) searchParams.append('page', params.page.toString());\n    if (params.limit) searchParams.append('limit', params.limit.toString());\n    if (params.status) searchParams.append('status', params.status);\n\n    const query = searchParams.toString();\n    const url = `/api/company/${subdomain}/orders${query ? `?${query}` : ''}`;\n    \n    return this.client.get<OrdersResponse>(url);\n  }\n\n  async get(subdomain: string, orderId: string): Promise<{ order: Order }> {\n    return this.client.get<{ order: Order }>(`/api/company/${subdomain}/orders/${orderId}`);\n  }\n\n  // For client users - list their assigned orders\n  async listClientOrders(params: OrdersListParams = {}): Promise<OrdersResponse> {\n    const searchParams = new URLSearchParams();\n    if (params.page) searchParams.append('page', params.page.toString());\n    if (params.limit) searchParams.append('limit', params.limit.toString());\n    if (params.status) searchParams.append('status', params.status);\n\n    const query = searchParams.toString();\n    const url = `/api/orders${query ? `?${query}` : ''}`;\n    \n    return this.client.get<OrdersResponse>(url);\n  }\n\n  async getClientOrder(orderId: string): Promise<{ order: Order }> {\n    return this.client.get<{ order: Order }>(`/api/orders/${orderId}`);\n  }\n}\n\nexport const ordersAPI = new OrdersAPI();"],"names":[],"mappings":";;;;AAAA;;AASO,MAAM;;IACX,YAAY,AAAQ,SAAS,0IAAA,CAAA,YAAS,CAAE;aAApB,SAAA;IAAqB;IAEzC,MAAM,KAAK,SAAiB,EAAE,SAA2B,CAAC,CAAC,EAA2B;QACpF,MAAM,eAAe,IAAI;QACzB,IAAI,OAAO,IAAI,EAAE,aAAa,MAAM,CAAC,QAAQ,OAAO,IAAI,CAAC,QAAQ;QACjE,IAAI,OAAO,KAAK,EAAE,aAAa,MAAM,CAAC,SAAS,OAAO,KAAK,CAAC,QAAQ;QACpE,IAAI,OAAO,MAAM,EAAE,aAAa,MAAM,CAAC,UAAU,OAAO,MAAM;QAE9D,MAAM,QAAQ,aAAa,QAAQ;QACnC,MAAM,MAAM,CAAC,aAAa,EAAE,UAAU,OAAO,EAAE,QAAQ,CAAC,CAAC,EAAE,OAAO,GAAG,IAAI;QAEzE,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAiB;IACzC;IAEA,MAAM,IAAI,SAAiB,EAAE,OAAe,EAA6B;QACvE,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAmB,CAAC,aAAa,EAAE,UAAU,QAAQ,EAAE,SAAS;IACxF;IAEA,gDAAgD;IAChD,MAAM,iBAAiB,SAA2B,CAAC,CAAC,EAA2B;QAC7E,MAAM,eAAe,IAAI;QACzB,IAAI,OAAO,IAAI,EAAE,aAAa,MAAM,CAAC,QAAQ,OAAO,IAAI,CAAC,QAAQ;QACjE,IAAI,OAAO,KAAK,EAAE,aAAa,MAAM,CAAC,SAAS,OAAO,KAAK,CAAC,QAAQ;QACpE,IAAI,OAAO,MAAM,EAAE,aAAa,MAAM,CAAC,UAAU,OAAO,MAAM;QAE9D,MAAM,QAAQ,aAAa,QAAQ;QACnC,MAAM,MAAM,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC,EAAE,OAAO,GAAG,IAAI;QAEpD,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAiB;IACzC;IAEA,MAAM,eAAe,OAAe,EAA6B;QAC/D,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAmB,CAAC,YAAY,EAAE,SAAS;IACnE;AACF;AAEO,MAAM,YAAY,IAAI","debugId":null}},
    {"offset": {"line": 579, "column": 0}, "map": {"version":3,"sources":["file:///root/3d-measurement-app/packages/api-client/src/measurements.ts"],"sourcesContent":["import { apiClient } from './client';\nimport { Measurement, CreateMeasurementRequest, UpdateMeasurementRequest } from './types';\n\nexport class MeasurementsAPI {\n  constructor(private client = apiClient) {}\n\n  async create(\n    subdomain: string, \n    orderId: string, \n    data: CreateMeasurementRequest\n  ): Promise<{ measurement: Measurement }> {\n    return this.client.post<{ measurement: Measurement }>(\n      `/api/company/${subdomain}/orders/${orderId}/measurements`,\n      data\n    );\n  }\n\n  async update(\n    subdomain: string,\n    orderId: string,\n    measurementId: string,\n    data: UpdateMeasurementRequest\n  ): Promise<{ measurement: Measurement }> {\n    return this.client.put<{ measurement: Measurement }>(\n      `/api/company/${subdomain}/orders/${orderId}/measurements/${measurementId}`,\n      data\n    );\n  }\n\n  // For client users - update measurement values\n  async updateValue(\n    orderId: string,\n    measurementId: string,\n    data: UpdateMeasurementRequest\n  ): Promise<{ measurement: Measurement }> {\n    return this.client.put<{ measurement: Measurement }>(\n      `/api/orders/${orderId}/measurements/${measurementId}`,\n      data\n    );\n  }\n}\n\nexport const measurementsAPI = new MeasurementsAPI();"],"names":[],"mappings":";;;;AAAA;;AAGO,MAAM;;IACX,YAAY,AAAQ,SAAS,0IAAA,CAAA,YAAS,CAAE;aAApB,SAAA;IAAqB;IAEzC,MAAM,OACJ,SAAiB,EACjB,OAAe,EACf,IAA8B,EACS;QACvC,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CACrB,CAAC,aAAa,EAAE,UAAU,QAAQ,EAAE,QAAQ,aAAa,CAAC,EAC1D;IAEJ;IAEA,MAAM,OACJ,SAAiB,EACjB,OAAe,EACf,aAAqB,EACrB,IAA8B,EACS;QACvC,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CACpB,CAAC,aAAa,EAAE,UAAU,QAAQ,EAAE,QAAQ,cAAc,EAAE,eAAe,EAC3E;IAEJ;IAEA,+CAA+C;IAC/C,MAAM,YACJ,OAAe,EACf,aAAqB,EACrB,IAA8B,EACS;QACvC,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CACpB,CAAC,YAAY,EAAE,QAAQ,cAAc,EAAE,eAAe,EACtD;IAEJ;AACF;AAEO,MAAM,kBAAkB,IAAI","debugId":null}},
    {"offset": {"line": 608, "column": 0}, "map": {"version":3,"sources":["file:///root/3d-measurement-app/packages/api-client/src/index.ts"],"sourcesContent":["// Export all types\nexport * from './types';\n\n// Export API classes and instances\nexport { ApiClient, apiClient } from './client';\nexport { AuthAPI, authAPI } from './auth';\nexport { OrdersAPI, ordersAPI } from './orders';\nexport { MeasurementsAPI, measurementsAPI } from './measurements';\n\n// Re-export instances\nimport { authAPI } from './auth';\nimport { ordersAPI } from './orders';\nimport { measurementsAPI } from './measurements';\n\n// Export convenience instance for easy importing\nexport const api = {\n  auth: authAPI,\n  orders: ordersAPI,\n  measurements: measurementsAPI,\n};"],"names":[],"mappings":"AAAA,mBAAmB;;;;AACnB;AAEA,mCAAmC;AACnC;AACA;AACA;AACA;;;;;;;;;AAQO,MAAM,MAAM;IACjB,MAAM,wIAAA,CAAA,UAAO;IACb,QAAQ,0IAAA,CAAA,YAAS;IACjB,cAAc,gJAAA,CAAA,kBAAe;AAC/B","debugId":null}},
    {"offset": {"line": 650, "column": 0}, "map": {"version":3,"sources":["file:///root/3d-measurement-app/packages/ui/src/hooks/useAuth.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { authAPI, User } from '@3d-measurement-app/api-client';\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  login: (token: string, userData: User) => void;\n  logout: () => void;\n  isAuthenticated: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check for existing token on mount\n    const initAuth = async () => {\n      try {\n        const token = authAPI.client.getToken();\n        if (token) {\n          // Fetch complete user data from API instead of just parsing JWT\n          const userData = await authAPI.getMe();\n          setUser(userData);\n        }\n      } catch (error) {\n        console.error('Auth initialization error:', error);\n        // If API call fails, clear the invalid token\n        authAPI.logout();\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    initAuth();\n  }, []);\n\n  const login = (token: string, userData: User) => {\n    // The token is already set in the authAPI.verify method\n    setUser(userData);\n  };\n\n  const logout = () => {\n    authAPI.logout();\n    setUser(null);\n  };\n\n  const value = {\n    user,\n    loading,\n    login,\n    logout,\n    isAuthenticated: !!user,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};"],"names":[],"mappings":";;;;;AAAA;AACA;AAAA;;;;AAUA,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,MAAM,eAAwD,CAAC,EAAE,QAAQ,EAAE;IAChF,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,oCAAoC;QACpC,MAAM,WAAW;YACf,IAAI;gBACF,MAAM,QAAQ,wIAAA,CAAA,UAAO,CAAC,MAAM,CAAC,QAAQ;gBACrC,IAAI,OAAO;oBACT,gEAAgE;oBAChE,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAO,CAAC,KAAK;oBACpC,QAAQ;gBACV;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,8BAA8B;gBAC5C,6CAA6C;gBAC7C,wIAAA,CAAA,UAAO,CAAC,MAAM;YAChB,SAAU;gBACR,WAAW;YACb;QACF;QAEA;IACF,GAAG,EAAE;IAEL,MAAM,QAAQ,CAAC,OAAe;QAC5B,wDAAwD;QACxD,QAAQ;IACV;IAEA,MAAM,SAAS;QACb,wIAAA,CAAA,UAAO,CAAC,MAAM;QACd,QAAQ;IACV;IAEA,MAAM,QAAQ;QACZ;QACA;QACA;QACA;QACA,iBAAiB,CAAC,CAAC;IACrB;IAEA,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;kBAC1B;;;;;;AAGP;AAEO,MAAM,UAAU;IACrB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 722, "column": 0}, "map": {"version":3,"sources":["file:///root/3d-measurement-app/packages/ui/src/index.ts"],"sourcesContent":["// Export components\nexport { Button } from './components/Button';\nexport { Card, CardHeader, CardTitle, CardContent } from './components/Card';\nexport { LoadingSpinner, LoadingPage } from './components/LoadingSpinner';\n\n// Export hooks\nexport { AuthProvider, useAuth } from './hooks/useAuth';"],"names":[],"mappings":"AAAA,oBAAoB;;AACpB;AACA;AACA;AAEA,eAAe;AACf","debugId":null}},
    {"offset": {"line": 751, "column": 0}, "map": {"version":3,"sources":["file:///root/3d-measurement-app/company-dashboard/src/app/layout.tsx"],"sourcesContent":["'use client';\n\nimport type { Metadata } from \"next\";\nimport { Geist, Geist_Mono } from \"next/font/google\";\nimport { AuthProvider } from '@3d-measurement-app/ui';\nimport \"./globals.css\";\n\nconst geistSans = Geist({\n  variable: \"--font-geist-sans\",\n  subsets: [\"latin\"],\n});\n\nconst geistMono = Geist_Mono({\n  variable: \"--font-geist-mono\",\n  subsets: [\"latin\"],\n});\n\n// Note: metadata export not supported in client components\n// TODO: Move to separate metadata file\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\">\n      <body\n        className={`${geistSans.variable} ${geistMono.variable} antialiased`}\n      >\n        <AuthProvider>\n          {children}\n        </AuthProvider>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;AAIA;AAAA;AAJA;;;;;;AAoBe,SAAS,WAAW,EACjC,QAAQ,EAGR;IACA,qBACE,8OAAC;QAAK,MAAK;kBACT,cAAA,8OAAC;YACC,WAAW,GAAG,yIAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,8IAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,YAAY,CAAC;sBAEpE,cAAA,8OAAC,0IAAA,CAAA,eAAY;0BACV;;;;;;;;;;;;;;;;AAKX","debugId":null}}]
}